cmake_minimum_required (VERSION 3.8)

project ("KuriboKernel")

set(CMAKE_CXX_STANDARD 20)

add_executable (KuriboKernel
	"source/api/HostInterop.h"
	"source/api/Module.h"
	"source/common.h"
	"source/config.h"
	"source/core/patch.hxx"
	"source/core/sync.hxx"
	"source/debug.h"
	"source/debug/assert.h"
	"source/debug/log.h"
	"source/io/filesystem.hxx"
	"source/io/io.hxx"
	"source/jit/allocator/frame.hpp"
	"source/jit/engine/compiler.hpp"
	"source/jit/engine/engine.hpp"
	"source/modules/Project.hxx"
	"source/modules/SymbolManager.hxx"
	"source/modules/comet/file_format.hxx"
	"source/modules/gecko/CodePrinter.hxx"
	"source/modules/gecko/Frontend.hxx"
	"source/modules/kamek/Loader.hxx"
	"source/modules/kamek/Module.hxx"
	"source/modules/kamek/kamek.h"
	"source/modules/kxer/Binary.hxx"
	"source/modules/kxer/Loader.hxx"
	"source/modules/kxer/Module.hxx"
	"source/system/memory.hxx"
	"source/system/memory/free_list_heap.hxx"
	"source/system/memory/heap.hxx"
	"source/system/memory/stack_alloc.hxx"
	"source/system/memory/xalloc/Allocator.h"
	"source/system/memory/xalloc/FreeListAllocator.h"
	"source/system/memory/xalloc/SinglyLinkedList.h"
	"source/system/memory/xalloc/SinglyLinkedListImpl.h"
	"source/system/memory/xalloc/Utils.h"
	"source/system/system.hxx"
	"source/types.h"
	"source/util/crc.hxx"
	"source/util/deferred.hxx"
	"source/util/json.hxx"
	"source/vendor/EABase/config/eacompiler.h"
	"source/vendor/EABase/config/eacompilertraits.h"
	"source/vendor/EABase/config/eaplatform.h"
	"source/vendor/EABase/eabase.h"
	"source/vendor/EABase/eahave.h"
	"source/vendor/EABase/earesult.h"
	"source/vendor/EABase/eastdarg.h"
	"source/vendor/EABase/eaunits.h"
	"source/vendor/EABase/int128.h"
	"source/vendor/EABase/nullptr.h"
	"source/vendor/EABase/version.h"
	"source/vendor/EASTL/algorithm.h"
	"source/vendor/EASTL/allocator.h"
	"source/vendor/EASTL/allocator_malloc.h"
	"source/vendor/EASTL/any.h"
	"source/vendor/EASTL/array.h"
	"source/vendor/EASTL/bitset.h"
	"source/vendor/EASTL/bitvector.h"
	"source/vendor/EASTL/bonus/adaptors.h"
	"source/vendor/EASTL/bonus/call_traits.h"
	"source/vendor/EASTL/bonus/compressed_pair.h"
	"source/vendor/EASTL/bonus/fixed_ring_buffer.h"
	"source/vendor/EASTL/bonus/fixed_tuple_vector.h"
	"source/vendor/EASTL/bonus/intrusive_sdlist.h"
	"source/vendor/EASTL/bonus/intrusive_slist.h"
	"source/vendor/EASTL/bonus/list_map.h"
	"source/vendor/EASTL/bonus/lru_cache.h"
	"source/vendor/EASTL/bonus/ring_buffer.h"
	"source/vendor/EASTL/bonus/sort_extra.h"
	"source/vendor/EASTL/bonus/sparse_matrix.h"
	"source/vendor/EASTL/bonus/tuple_vector.h"
	"source/vendor/EASTL/chrono.h"
	"source/vendor/EASTL/core_allocator.h"
	"source/vendor/EASTL/core_allocator_adapter.h"
	"source/vendor/EASTL/deque.h"
	"source/vendor/EASTL/fixed_allocator.h"
	"source/vendor/EASTL/fixed_function.h"
	"source/vendor/EASTL/fixed_hash_map.h"
	"source/vendor/EASTL/fixed_hash_set.h"
	"source/vendor/EASTL/fixed_list.h"
	"source/vendor/EASTL/fixed_map.h"
	"source/vendor/EASTL/fixed_set.h"
	"source/vendor/EASTL/fixed_slist.h"
	"source/vendor/EASTL/fixed_string.h"
	"source/vendor/EASTL/fixed_substring.h"
	"source/vendor/EASTL/fixed_vector.h"
	"source/vendor/EASTL/functional.h"
	"source/vendor/EASTL/hash_map.h"
	"source/vendor/EASTL/hash_set.h"
	"source/vendor/EASTL/heap.h"
	"source/vendor/EASTL/initializer_list.h"
	"source/vendor/EASTL/internal/allocator_traits.h"
	"source/vendor/EASTL/internal/allocator_traits_fwd_decls.h"
	"source/vendor/EASTL/internal/char_traits.h"
	"source/vendor/EASTL/internal/config.h"
	"source/vendor/EASTL/internal/copy_help.h"
	"source/vendor/EASTL/internal/enable_shared.h"
	"source/vendor/EASTL/internal/fill_help.h"
	"source/vendor/EASTL/internal/fixed_pool.h"
	"source/vendor/EASTL/internal/function.h"
	"source/vendor/EASTL/internal/function_detail.h"
	"source/vendor/EASTL/internal/function_help.h"
	"source/vendor/EASTL/internal/functional_base.h"
	"source/vendor/EASTL/internal/generic_iterator.h"
	"source/vendor/EASTL/internal/hashtable.h"
	"source/vendor/EASTL/internal/in_place_t.h"
	"source/vendor/EASTL/internal/integer_sequence.h"
	"source/vendor/EASTL/internal/intrusive_hashtable.h"
	"source/vendor/EASTL/internal/mem_fn.h"
	"source/vendor/EASTL/internal/memory_base.h"
	"source/vendor/EASTL/internal/meta.h"
	"source/vendor/EASTL/internal/move_help.h"
	"source/vendor/EASTL/internal/pair_fwd_decls.h"
	"source/vendor/EASTL/internal/piecewise_construct_t.h"
	"source/vendor/EASTL/internal/red_black_tree.h"
	"source/vendor/EASTL/internal/smart_ptr.h"
	"source/vendor/EASTL/internal/thread_support.h"
	"source/vendor/EASTL/internal/tuple_fwd_decls.h"
	"source/vendor/EASTL/internal/type_compound.h"
	"source/vendor/EASTL/internal/type_fundamental.h"
	"source/vendor/EASTL/internal/type_pod.h"
	"source/vendor/EASTL/internal/type_properties.h"
	"source/vendor/EASTL/internal/type_transformations.h"
	"source/vendor/EASTL/intrusive_hash_map.h"
	"source/vendor/EASTL/intrusive_hash_set.h"
	"source/vendor/EASTL/intrusive_list.h"
	"source/vendor/EASTL/intrusive_ptr.h"
	"source/vendor/EASTL/iterator.h"
	"source/vendor/EASTL/linked_array.h"
	"source/vendor/EASTL/linked_ptr.h"
	"source/vendor/EASTL/list.h"
	"source/vendor/EASTL/map.h"
	"source/vendor/EASTL/memory.h"
	"source/vendor/EASTL/meta.h"
	"source/vendor/EASTL/numeric.h"
	"source/vendor/EASTL/numeric_limits.h"
	"source/vendor/EASTL/optional.h"
	"source/vendor/EASTL/priority_queue.h"
	"source/vendor/EASTL/queue.h"
	"source/vendor/EASTL/random.h"
	"source/vendor/EASTL/ratio.h"
	"source/vendor/EASTL/safe_ptr.h"
	"source/vendor/EASTL/scoped_array.h"
	"source/vendor/EASTL/scoped_ptr.h"
	"source/vendor/EASTL/segmented_vector.h"
	"source/vendor/EASTL/set.h"
	"source/vendor/EASTL/shared_array.h"
	"source/vendor/EASTL/shared_ptr.h"
	"source/vendor/EASTL/slist.h"
	"source/vendor/EASTL/sort.h"
	"source/vendor/EASTL/span.h"
	"source/vendor/EASTL/stack.h"
	"source/vendor/EASTL/string.h"
	"source/vendor/EASTL/string_hash_map.h"
	"source/vendor/EASTL/string_map.h"
	"source/vendor/EASTL/string_view.h"
	"source/vendor/EASTL/tuple.h"
	"source/vendor/EASTL/type_traits.h"
	"source/vendor/EASTL/unique_ptr.h"
	"source/vendor/EASTL/unordered_map.h"
	"source/vendor/EASTL/unordered_set.h"
	"source/vendor/EASTL/utility.h"
	"source/vendor/EASTL/variant.h"
	"source/vendor/EASTL/vector.h"
	"source/vendor/EASTL/vector_map.h"
	"source/vendor/EASTL/vector_multimap.h"
	"source/vendor/EASTL/vector_multiset.h"
	"source/vendor/EASTL/vector_set.h"
	"source/vendor/EASTL/version.h"
	"source/vendor/EASTL/weak_ptr.h"
	"source/vendor/imconfig.h"
	"source/vendor/imgui.h"
	"source/vendor/imgui_internal.h"
	"source/vendor/imstb_rectpack.h"
	"source/vendor/imstb_textedit.h"
	"source/vendor/imstb_truetype.h"
	"source/vendor/smol_json.hxx"
	"source/debug/kassert.cxx"
	"source/entry.cxx"
	"source/io/filesystem.cxx"
	"source/jit/engine/compiler.cxx"
	"source/jit/engine/engine.cxx"
	"source/jit/tests.cxx"
	"source/modules/Project.cxx"
	"source/modules/SymbolManager.cxx"
	"source/modules/gecko/Frontend.cxx"
	"source/modules/kamek/Loader.cxx"
	"source/modules/kxer/Loader.cxx"
	"source/modules/kxer/Module.cxx"
	"source/platform.cxx"
	"source/system/memory/memory.cxx"
	"source/system/memory/xalloc/FreeListAllocator.cxx"
	"source/system/system.cxx"
	"source/test.cxx"
	"source/vendor/EASTL/allocator_eastl.cxx"
	"source/vendor/EASTL/assert.cxx"
	"source/vendor/EASTL/fixed_pool.cpp"
	"source/vendor/EASTL/hashtable.cpp"
	"source/vendor/EASTL/intrusive_list.cpp"
	"source/vendor/EASTL/numeric_limits.cpp"
	"source/vendor/EASTL/red_black_tree.cpp"
	"source/vendor/EASTL/string.cpp"
	"source/vendor/libc.c"
)

target_include_directories(KuriboKernel PRIVATE "source" "source/vendor" "../" "../sdk")

if (KURIBO_BUILD_WII)
	set(KERNEL_LINK, " -Wl,--script=${CMAKE_SOURCE_DIR}/arch/gc.lcf ")

	set(CMAKE_C_LINK_FLAGS "${CMAKE_C_LINK_FLAGS} -Wl,--script=${CMAKE_SOURCE_DIR}/arch/gc.lcf ")
	set(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} -Wl,--script=${CMAKE_SOURCE_DIR}/arch/gc.lcf ")


	set(KERNEL_COMPILE "-fsanitize=cfi -fvisibility=hidden")

	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${KERNEL_COMPILE}")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${KERNEL_COMPILE}")

	target_link_libraries(KuriboKernel "${CMAKE_SOURCE_DIR}/../Targets/libKuriboClang.a")

	add_custom_target(${PROJECT_NAME}.bin ALL DEPENDS ${PROJECT_NAME})
	add_custom_command(
		TARGET ${PROJECT_NAME}.bin
		COMMAND ${CMAKE_OBJCOPY} ARGS -O binary ${PROJECT_NAME} ${PROJECT_NAME}.bin
	)

	if (DEFINED ENV{KURIBO_KERNEL_DEPLOY_PATH})
		add_custom_target(BOTH ALL DEPENDS ${PROJECT_NAME})
		add_custom_command(
			TARGET BOTH
			COMMAND ${CMAKE_COMMAND} -E copy
					${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.bin
					$ENV{KURIBO_KERNEL_DEPLOY_PATH})
	else()
		message("Deploy path is not set")
	endif()
endif()